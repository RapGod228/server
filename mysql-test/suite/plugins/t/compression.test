let $engine=`select regexp_replace('$MTR_COMBINATIONS', '-.*', '')`;
let $alg=`select regexp_replace('$MTR_COMBINATIONS', '.*-', '')`;

if (`select count(*) = 0 from information_schema.plugins where plugin_name = '$engine' and plugin_status='active'`)
{
  --skip Needs $engine plugin
}

if (`select count(*) = 0 from information_schema.plugins where plugin_name = '$alg' and plugin_status='active'`)
{
  --skip Needs $alg plugin
}

--echo #
--echo # Testing $alg compression with $engine
--echo #

if ($engine == "innodb") {
  eval set global innodb_compression_algorithm = $alg;
  let $table_params = page_compressed = 1;
  call mtr.add_suppression("InnoDB: Background Page read failed to read or decrypt \\[page id: space=\\d+, page number=\\d+\\]");
  call mtr.add_suppression("InnoDB: Table `test`.`t1` is corrupted. Please drop the table and recreate.");
}
if ($engine == "mroonga") {
  let $column_params = `SELECT UPPER('COMMENT \'flags "COLUMN_SCALAR|COMPRESS_$alg"\'')`;
  let $table_params = charset = utf8;
}

eval CREATE TABLE t1 (a int, b text $column_params) engine = $engine $table_params;

insert t1 (a, b) values (0, repeat("abc", 100));
insert t1 (a, b) values (1, repeat("def", 1000));
insert t1 (a, b) values (2, repeat("ghi", 10000));
select a, left(b, 9), length(b) from t1;

let $restart_parameters = --disable-$alg;
source include/restart_mysqld.inc;

disable_abort_on_error;
select a, left(b, 9), length(b) from t1;
enable_abort_on_error;
drop table t1;

let $restart_parameters =;
source include/restart_mysqld.inc;
